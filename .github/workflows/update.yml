name: Update Maven repository and deploy

on:
  repository_dispatch:
    types: [publish_update]

jobs:
  generate-token:
    runs-on: ubuntu-latest

    outputs:
      git-name: '${{ steps.app-token.outputs.app-slug }}[bot]'
      git-email: '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

    steps:
      - name: Generate an authentication token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.BLAZER_BOT_APP_ID }}
          private-key: ${{ secrets.BLAZER_BOT_PRIVATE_KEY }}
          # Set the owner, so the token can be used in all repositories
          owner: ${{ github.repository_owner }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

  update:
    uses: CoffeeCoder1/VendorTools/.github/workflows/update-maven.yml@2025.1.0
    needs: [generate-token]

    permissions:
      contents: write   # to push git commits
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    with:
      git-name: ${{ needs.generate-token.outputs.git-name }}
      git-email: ${{ needs.generate-token.outputs.git-email }}
      github-app-id: ${{ vars.BLAZER_BOT_APP_ID }}
      artifact-pattern: ${{ github.event.client_payload.artifactPattern }}
      artifact-repository: ${{ github.event.client_payload.repositoryName }}
      artifact-run-id: ${{ github.event.client_payload.artifactRunId }}
      release-version: ${{ github.event.client_payload.releaseVersion }}
    secrets:
      github-app-private-key: ${{ secrets.BLAZER_BOT_PRIVATE_KEY }}
